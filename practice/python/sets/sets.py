"""

Множество — cоставной тип данных, представляющий собой неупорядоченный набор уникальных объектов
(элементов множества) под одним именем.
При этом, например, 1 и 1.0 - одно и то же число, а не разные!
Множества изменяемы и чаще всего используются для удаление дубликатов
и всевозможных проверок на вхождение.
"""

# animals = {'cat', 'dog', 'fox', 'wolf'}
# print(animals)

# empty = set()

animals_and_num = {'cat', 5, 'dog', 4, 'fox', 3, 'wolf', 2}
# print(animals_and_num)

"""
Порядок элементов в множестве не определен.
К элементам множества нет доступа по номеру, нельзя делать срезы.
Элементы множеств — строки и/или числа.
Множество не может содержать одинаковых элементов
"""
#
# print(len(animals_and_num))
#
# my_set = set()
# my_set.add('a')
# my_set.add('b')
# my_set.add('a')
# print(my_set)

"""
discard - удалить заданный элемент, если он есть в множестве, и ничего не делать, если его нет;
remove - удалить заданный элемент, если он есть, и породить ошибку KeyError, если нет;
pop - удалить некоторый элемент из множества и возвратить его как результат.
"""

my_set = {'a', 'b', 'c'}
# my_set.discard('a')      # будет удален
# my_set.discard('boom')   # нет в множестве, ничего не делать
# print(my_set)
#
#
# my_set.remove('b')       # будет удален
# print(my_set)
#
# my_set.remove('game')    # не в множестве, вызовет ошибку KeyError

# elem = my_set.pop() # удаляет из множества случайный элемент и возвращает его значение
# print(elem)
# my_set.clear()
# print(my_set)


# my_set = {'a', 'b', 'c'}
# for i in my_set:
#     print(i)
#
# m1 = {'a', 'b', 'c'}
# m2 = {'a', 'c', 'd'}
# union = m1.union(m2)
# print(union)
# intersection = m1.intersection(m2)
# print(intersection)


# m1 = {'a', 'b', 'c'}
# m2 = {'a', 'c', 'b'}
# print(m1 >= m2)



# Пример 1

A = set()

for i in range(26):         # создаем множество строчных букв
    A.add(chr(ord('a') + i))

B = set('aeiouy')           # создаем с помощью конструктора set() множество гласных
# print(B)
print(B.issubset(A))        # B - подмножество А? (True/False)
A.difference_update(B)
print(f'Всё, что осталось от А после удаления подмножества В: {A}')